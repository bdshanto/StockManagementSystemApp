<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>